{"status":{},"contains_secrets":false,"product_version":"2.9.8","spec":{"description":"","resources":{"client_attrs":{"None":{"y":-5.5,"x":967.953125},"f6be2786_deployment":{"y":-208.1265146707,"x":1269.8915520502}},"service_definition_list":[{"singleton":false,"action_list":[{"description":"System action for creating an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6fba9cbb_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"01945104_runbook","main_task_local_reference":{"kind":"app_task","name":"6fba9cbb_dag"},"variable_list":[]},"name":"action_create"},{"description":"System action for deleting an application. Deletes created VMs as well","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"8bee20f0_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"fe42eb38_runbook","main_task_local_reference":{"kind":"app_task","name":"8bee20f0_dag"},"variable_list":[]},"name":"action_delete"},{"description":"System action for restarting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"04cc6e24_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ffd25064_runbook","main_task_local_reference":{"kind":"app_task","name":"04cc6e24_dag"},"variable_list":[]},"name":"action_restart"},{"description":"System action for starting an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"9d7e4dfb_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"ef6acd35_runbook","main_task_local_reference":{"kind":"app_task","name":"9d7e4dfb_dag"},"variable_list":[]},"name":"action_start"},{"description":"System action for stopping an application","type":"system","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"897e9b24_dag","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"b81e8f8b_runbook","main_task_local_reference":{"kind":"app_task","name":"897e9b24_dag"},"variable_list":[]},"name":"action_stop"}],"depends_on_list":[],"name":"Postgres","port_list":[],"tier":"","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"TM_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"SNAP_OPERATION_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"SNAP_ENTITY_ID","value":"","label":"","attrs":{"type":""},"is_hidden":false,"options":{"type":"PREDEFINED","choices":[]}}],"description":""}],"substrate_definition_list":[{"description":"","action_list":[{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1GetClusterID"},{"kind":"app_task","name":"2GetProfileIDs"},{"kind":"app_task","name":"3GetSLAID"},{"kind":"app_task","name":"4ProvisionDB"},{"kind":"app_task","name":"5MonitorOperation"},{"kind":"app_task","name":"6GetDatabaseInfo"}],"name":"2a5c1fa7_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"1GetClusterID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2GetProfileIDs"}},{"from_task_reference":{"kind":"app_task","name":"2GetProfileIDs"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"3GetSLAID"}},{"from_task_reference":{"kind":"app_task","name":"3GetSLAID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"4ProvisionDB"}},{"from_task_reference":{"kind":"app_task","name":"4ProvisionDB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"5MonitorOperation"}},{"from_task_reference":{"kind":"app_task","name":"5MonitorOperation"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"6GetDatabaseInfo"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1GetClusterID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Cluster ID\nurl  = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/clusters\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"CLUSTER_ID={0}\".format(json.loads(resp.content)[0]['id'])\nelse:\n  print \"Get Cluster ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["CLUSTER_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2GetProfileIDs","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Software Profile ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/profiles?type=Software&name=@@{software_profile}@@\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"SOFTWARE_PROF_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get Software Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Get Compute Profile ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/profiles?type=Compute&name=@@{compute_profile}@@\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"COMPUTE_PROF_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get Compute Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Get Network Profile ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/profiles?type=Network&name=@@{network_profile}@@\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"NETWORK_PROF_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get Network Profile ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Get DB Parameter ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/profiles?type=Database_Parameter&name=@@{database_parameter}@@\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"DB_PARAM_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get DB Parameter ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["COMPUTE_PROF_ID","DB_PARAM_ID","NETWORK_PROF_ID","SOFTWARE_PROF_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"3GetSLAID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Set the db_name here, so we don't have the calm_time macro expanding at two different times\n# print \"DB_NAME=@@{db_name_prefix}@@_{0}\".format(@@{calm_time(\"%Y%m%d%H%M\")}@@)\n\nprint \"DB_NAME=@@{db_name_prefix}@@\"\n\n# Get the list of SLAs\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/slas\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n\n# Find the desired SLA, and set the corresponding ID to the variable\nif resp.ok:\n  for sla in json.loads(resp.content):\n    if sla['name'] == \"@@{sla_name}@@\":\n      print \"SLA_ID={0}\".format(sla['id'])\nelse:\n  print \"Get SLA request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["SLA_ID","DB_NAME"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4ProvisionDB","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Set the URL and payload\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/databases\/provision\"\npayload = {\n  \"databaseName\": \"@@{DB_NAME}@@\",\n  \"databaseType\": \"postgres_database\",\n  \"databaseDescription\": \"Postgres database provisioned by Calm Application @@{calm_application_name}@@\",\n  \"clusterId\": \"@@{CLUSTER_ID}@@\",\n  \"softwareProfileId\": \"@@{SOFTWARE_PROF_ID}@@\",\n  \"computeProfileId\": \"@@{COMPUTE_PROF_ID}@@\",\n  \"networkProfileId\": \"@@{NETWORK_PROF_ID}@@\",\n  \"dbParameterProfileId\": \"@@{DB_PARAM_ID}@@\",\n  \"provisionInfo\": [\n    {\n      \"name\": \"application_type\",\n      \"value\": \"postgres_database\"\n    },\n    {\n      \"name\": \"listener_port\",\n      \"value\": \"5432\"\n    },\n    {\n      \"name\": \"database_size\",\n      \"value\": \"200\"\n    },\n    {\n      \"name\": \"working_dir\",\n      \"value\": \"\/tmp\"\n    },\n    {\n      \"name\": \"auto_tune_staging_drive\",\n      \"value\": True\n    },\n    {\n      \"name\": \"db_password\",\n      \"value\": \"@@{db_password}@@\"\n    },\n    {\n      \"name\": \"dbserver_name\",\n      \"value\": \"PostgreSQL01\"\n    },\n    {\n      \"name\": \"dbserver_description\",\n      \"value\": \"Postgres database server provisioned by Calm Application \"\n    },\n    {\n      \"name\": \"ssh_public_key\",\n      \"value\": \"@@{db_server_creds.public_key}@@\"\n    }\n  ],\n  \"timeMachineInfo\": {\n    \"name\": \"PostgreSQL01_TM\",\n    \"description\": \"PostgreSQL01 time machine\",\n    \"slaId\": \"@@{SLA_ID}@@\",\n    \"schedule\": {\n      \"continuousSchedule\": {\n        \"enabled\": True,\n        \"logBackupInterval\": 30,\n        \"snapshotsPerDay\": 30\n      },\n      \"snapshotTimeOfDay\": {\n        \"hours\": 1,\n        \"minutes\": 0,\n        \"seconds\": 0\n      },\n      \"weeklySchedule\": {\n        \"enabled\": True,\n        \"dayOfWeek\": \"SUNDAY\"\n      },\n      \"monthlySchedule\": {\n        \"enabled\": True,\n        \"dayOfMonth\": 1\n      },\n      \"quartelySchedule\": {\n        \"enabled\": True,\n        \"startMonth\": \"JANUARY\",\n        \"dayOfMonth\": 1\n      },\n      \"yearlySchedule\": {\n        \"enabled\": False,\n        \"month\": \"DECEMBER\",\n        \"dayOfMonth\": 1\n      }\n    }\n  }\n}\n\n# Make the call and set the response operation ID to the variable\nresp = urlreq(url, verb='POST', auth='BASIC', user=era_user, passwd=era_pass, params=json.dumps(payload), headers=headers)\nif resp.ok:\n  print json.dumps(json.loads(resp.content), indent=4)\n  print \"CREATE_OPERATION_ID={0}\".format(json.loads(resp.content)['operationId'])\nelse:\n  print \"Post Database create request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["CREATE_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"5MonitorOperation","attrs":{"exit_status":[],"script":"# Set creds, headers, and URL\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/operations\/@@{CREATE_OPERATION_ID}@@\"\n\n# Monitor the operation\nfor x in range(40):\n  \n  print \"Sleeping for 60 seconds.\"\n  sleep(60)\n  resp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n  print \"Percentage Complete: {0}\".format(json.loads(resp.content)['percentageComplete'])\n  \n  # If complete, break out of loop\n  if json.loads(resp.content)['percentageComplete'] == \"100\":\n    break\n\n# If the operation did not complete within 20 minutes, assume it's not successful and error out\nif json.loads(resp.content)['percentageComplete'] != \"100\":\n  print \"Get Operation ID timed out\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Get the newly provision DB Entity Name and set it to a variable\nprint \"DB_ENTITY_NAME={0}\".format(json.loads(resp.content)['entityName'])","eval_variables":["DB_ENTITY_NAME"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"6GetDatabaseInfo","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get DB Server IP and ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/databases\/name\/@@{DB_ENTITY_NAME}@@?detailed=true\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"DB_SERVER_IP={0}\".format(json.loads(resp.content)['hostIP'])\n  print \"DB_ID={0}\".format(json.loads(resp.content)['id'])\n  print \"DB_SERVER_ID={0}\".format(json.loads(resp.content)['primaryHost'])\nelse:\n  print \"Get DB infor request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["DB_ID","DB_SERVER_ID","DB_SERVER_IP"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"80b56e92_runbook","main_task_local_reference":{"kind":"app_task","name":"2a5c1fa7_dag"},"variable_list":[]},"name":"pre_action_create"},{"description":"","type":"fragment","critical":false,"runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1CleanupDB"},{"kind":"app_task","name":"2MonitorCleanupOp"},{"kind":"app_task","name":"3DeregisterDBServer"},{"kind":"app_task","name":"4MonitorDeregOp"}],"name":"7e11c457_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"1CleanupDB"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2MonitorCleanupOp"}},{"from_task_reference":{"kind":"app_task","name":"2MonitorCleanupOp"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"3DeregisterDBServer"}},{"from_task_reference":{"kind":"app_task","name":"3DeregisterDBServer"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"4MonitorDeregOp"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1CleanupDB","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Cleanup the DB and get Operation ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/databases\/@@{DB_ID}@@?storage-cleanup=true&tm-cleanup=true\"\nresp = urlreq(url, verb='DELETE', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"CLEANUP_OPERATION_ID={0}\".format(json.loads(resp.content)['operationId'])\nelse:\n  print \"Cleanup DB Operation failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["CLEANUP_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2MonitorCleanupOp","attrs":{"script":"# Set creds, headers, and URL\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/operations\/@@{CLEANUP_OPERATION_ID}@@\"\n\n# Monitor the operation\nfor x in range(20):\n  \n  print \"Sleeping for 30 seconds.\"\n  sleep(30)\n  resp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n  print \"Percentage Complete: {0}\".format(json.loads(resp.content)['percentageComplete'])\n  \n  # If complete, break out of loop\n  if json.loads(resp.content)['percentageComplete'] == \"100\":\n    break    \n\n# If the operation did not complete within 10 minutes, assume it's not successful and error out\nif json.loads(resp.content)['percentageComplete'] != \"100\":\n  print \"Cleanup Operation timed out\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"3DeregisterDBServer","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Cleanup the DB and get Operation ID\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/dbservers\/@@{DB_SERVER_ID}@@?remove=false&soft-remove=false&delete=true&delete-vm-snapshots=true&delete-vgs=true\"\nresp = urlreq(url, verb='DELETE', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"DEREGISTER_OPERATION_ID={0}\".format(json.loads(resp.content)['operationId'])\nelse:\n  print \"Deregister DB Server Operation failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["DEREGISTER_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"4MonitorDeregOp","attrs":{"script":"# Set creds, headers, and URL\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/operations\/@@{DEREGISTER_OPERATION_ID}@@\"\n\n# Monitor the operation\nfor x in range(20):\n  \n  print \"Sleeping for 30 seconds.\"\n  sleep(30)\n  resp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n  print \"Percentage Complete: {0}\".format(json.loads(resp.content)['percentageComplete'])\n  \n  # If complete, break out of loop\n  if json.loads(resp.content)['percentageComplete'] == \"100\":\n    break    \n\n# If the operation did not complete within 10 minutes, assume it's not successful and error out\nif json.loads(resp.content)['percentageComplete'] != \"100\":\n  print \"Deregistration Operation timed out\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"9830ed47_runbook","main_task_local_reference":{"kind":"app_task","name":"7e11c457_dag"},"variable_list":[]},"name":"post_action_delete"}],"type":"EXISTING_VM","name":"Era_PostgreSQL_DB","readiness_probe":{"connection_type":"SSH","retries":"5","connection_protocol":"","connection_port":22,"address":"@@{ip_address}@@","delay_secs":"60","disable_readiness_probe":false,"login_credential_local_reference":{"kind":"app_credential","name":"db_server_creds"}},"os_type":"Linux","create_spec":{"type":"PROVISION_EXISTING_MACHINE","address":"@@{DB_SERVER_IP}@@"},"variable_list":[]}],"credential_definition_list":[{"username":"era","description":"","type":"KEY","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"db_server_creds"},{"username":"admin","description":"","type":"PASSWORD","secret":{"attrs":{"is_secret_modified":false,"secret_reference":{}}},"name":"era_creds"}],"package_definition_list":[{"description":"","action_list":[],"type":"DEB","service_local_reference_list":[{"kind":"app_service","name":"Postgres"}],"name":"Postgres_Package","version":"","options":{"install_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Postgres_Package"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[{"kind":"app_task","name":"fiestadataload"}],"name":"58ca4a03_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"fiestadataload","state":"ACTIVE","attrs":{"exit_status":[],"script":"#!\/bin\/bash\nset -ex\n# Generate the Postgres Network File\n\ncat << EOF > ~\/fiestapsg.sql\n\n-- MS SQL\n-- Database Name: Fiesta\n-- ------------------------------------------------------\n--\n\n\n--\n-- Table structure for table `products`\n--\n\nDROP TABLE IF EXISTS \"Products\";\nCREATE SEQUENCE \"Products_seq\";\n\nCREATE TABLE \"Products\" (\n  id INT PRIMARY KEY DEFAULT NEXTVAL ('\"Products_seq\"') ,\n  product_name varchar(255) NOT NULL,\n  product_price decimal(5,2) NOT NULL,\n  product_image_url text NOT NULL,\n  product_comment varchar(255) DEFAULT NULL,\n  comment text\n);\n\n\n--\n-- Dumping data for table `products`\n--\n\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('12 large ballons',2.30,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/BLOON_MET_GOLD__01_1000x.jpg?v=1571327220','On back order');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('Single Banquet Chair Cover',2.99,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/SASH_71_046_D04_0a16a508-5cd5-422f-ab7d-45acee11f6d1_1000x.jpg?v=1571323936','Vendor in on Wednesdays only.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('90x132 Rectangle Table Cloth',24.50,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/TAB_02_5454_SILV__02_7bb66485-2943-489e-a7c7-8d3f2d810fc5.progressive.jpg?v=1571325198','Table cloth quality issues. Need to talk to vendor.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('120\" Round Table Cloth',14.00,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/TAB_120_WHT-2_1000x.jpg?v=1571323057','Need double order next time.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('5 Pack Linen Napkins',5.25,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/NAP_OSC_WHT_1000x.jpg?v=1571323239','Dont buy the gray ones. Only Beige or white colors sell.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('12\"x108\" Inch Table Runner',2.42,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/RUN_STN_CHMP-2_large.progressive.jpg?v=1571323435','Vendor is discontinuing these July 2020.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('21 FT Table Skirt',15.00,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/SKT_POLY_WHT_21__01_1000x.jpg?v=1571323258','Get more variety from vendor as per customers feedback. ');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('Pretty Flowers Center Piece',25.50,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/PROP_CUPK_001__02_1000x.jpg?v=1571323944',NULL);\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('10 Champagne Flutes',4.50,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/PLST_CU0071_GOLD_1000x.jpg?v=1571325883','Place an order with vendor of 24 packets by next Saturday.');\nINSERT INTO \"Products\" (product_name,product_price,product_image_url,product_comment) VALUES ('Confetti Squares',3.99,'https:\/\/cdn.shopify.com\/s\/files\/1\/1832\/6341\/products\/BOTT_GLIT_002_GOLD__02_1000x.jpg?v=1571327289','On back order.');\n\n--\n-- Table structure for table `stores`\n--\n\nDROP TABLE IF EXISTS \"Stores\";\nCREATE SEQUENCE \"Stores_seq\";\n\nCREATE TABLE \"Stores\" (\n  id INT PRIMARY KEY DEFAULT NEXTVAL ('\"Stores_seq\"') ,\n  store_name varchar(255) NOT NULL,\n  store_city varchar(255) NOT NULL,\n  store_state varchar(255) NOT NULL,\n  comment text\t\n);\n\n--\n-- Dumping data for table `stores`\n--\n\nINSERT INTO \"Stores\" (store_name,store_city,store_state) VALUES ('Party Xtravaganza','Durham','NC');\nINSERT INTO \"Stores\"(store_name,store_city,store_state) VALUES ('Party Xperience','San Jose','CA');\nINSERT INTO \"Stores\"(store_name,store_city,store_state) VALUES ('Party with Us','New York','NY');\nINSERT INTO \"Stores\" (store_name,store_city,store_state) VALUES ('IneXpensive Party','Northboro','Iowa');\n\n--\n-- Table structure for table `inventory`\n--\n\nDROP TABLE IF EXISTS \"InventoryRecords\";\nCREATE SEQUENCE \"InventoryRecords_seq\";\n\nCREATE TABLE \"InventoryRecords\" (\n  id INT PRIMARY KEY DEFAULT NEXTVAL ('\"InventoryRecords_seq\"') ,\n  product_id int NOT NULL,\n  product_name varchar(255) NOT NULL,\n  store_id int NOT NULL,\n  store_name varchar(255) NOT NULL,\n  quantity int DEFAULT '0',\n  local_price decimal(5,2) NOT NULL,\n  comment text\n);\n\n--\n-- Dumping data for table `inventory`\n--\n\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (2,'Single Banquet Chair Cover',1,'Party Xtravaganza',30,4.05,'These chair cover sell a lot in beige and dont sell enough in other colors. ');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (3,'90x132 Rectangle Table Cloth',1,'Party Xtravaganza',100,29.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (5,'5 Pack Linen Napkins',1,'Party Xtravaganza',10,6.99,'The best napkins, believe me. ');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (7,'21 FT Table Skirt',1,'Party Xtravaganza',56,17.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (8,'Pretty Flowers Center Piece',1,'Party Xtravaganza',100,29.99,'If not sold within first 24 hrs. Advertise as 50% off.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (9,'10 Champagne Flutes',1,'Party Xtravaganza',98,7.99,'Clear Plastic.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (1,'12 large ballons',2,'Party Xperience',47,2.99,'The biggest ballons');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (2,'Single Banquet Chair Cover',2,'Party Xperience',16,3.66,'Stretchy kind.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (3,'90x132 Rectangle Table Cloth',2,'Party Xperience',60,25.95,'These table cloths are not popular in this store.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (4,'120\" Round Table Cloth',2,'Party Xperience',1,15.99,'Good quality materials. popular product. Re-order.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (5,'5 Pack Linen Napkins',2,'Party Xperience',100,5.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (6,'12\"x108\" Inch Table Runner',2,'Party Xperience',23,3.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (7,'21 FT Table Skirt',2,'Party Xperience',0,18.99,'Sold out');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (8,'Pretty Flowers Center Piece',2,'Party Xperience',2,29.99,'If not sold within first 24 hrs. Advertise as 50% off.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (9,'10 Champagne Flutes',2,'Party Xperience',100,7.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (1,'12 large ballons',3,'Party with Us',100,3.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (2,'Single Banquet Chair Cover',3,'Party with Us',100,4.99,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (3,'90x132 Rectangle Table Cloth',3,'Party with Us',100,20.00,'On sale, discontinuing product.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (4,'120\" Round Table Cloth',3,'Party with Us',3,15.95,'Popular item.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (5,'5 Pack Linen Napkins',3,'Party with Us',64,4.99,'Order only light beige color next time.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (6,'12\"x108\" Inch Table Runner',3,'Party with Us',0,5.99,'Sold out. ');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (7,'21 FT Table Skirt',3,'Party with Us',100,0.00,'');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (8,'Pretty Flowers Center Piece',3,'Party with Us',3,25.99,'If not sold within first 24 hrs. Advertize as 50% off.');\nINSERT INTO \"InventoryRecords\" (product_id,product_name,store_id,store_name,quantity,local_price,comment) VALUES (9,'10 Champagne Flutes',3,'Party with Us',87,5.99,'Clear Plastic');\n\n\nEOF\n\npsql -U postgres -d fiestadb1 -a -f ~\/fiestapsg.sql","script_type":"sh","type":"","command_line_args":"","login_credential_local_reference":{"kind":"app_credential","name":"db_server_creds"}},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"8b1f1a7b_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"58ca4a03_dag"},"message_list":[],"variable_list":[]},"type":"","uninstall_runbook":{"task_definition_list":[{"target_any_local_reference":{"kind":"app_package","name":"Postgres_Package"},"retries":"0","description":"","message_list":[],"child_tasks_local_reference_list":[],"name":"ee8bedbe_dag","state":"ACTIVE","attrs":{"edges":[],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]}],"description":"","name":"faacff5d_runbook","state":"ACTIVE","main_task_local_reference":{"kind":"app_task","name":"ee8bedbe_dag"},"message_list":[],"variable_list":[]}},"variable_list":[]}],"app_profile_list":[{"deployment_create_list":[{"type":"GREENFIELD","action_list":[],"name":"f6be2786_deployment","min_replicas":"1","default_replicas":"1","depends_on_list":[],"published_service_local_reference_list":[],"max_replicas":"1","package_local_reference_list":[{"kind":"app_package","name":"Postgres_Package"}],"substrate_local_reference":{"kind":"app_substrate","name":"Era_PostgreSQL_DB"},"variable_list":[],"description":""}],"description":"","action_list":[{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1GetTimeMachineID"},{"kind":"app_task","name":"2GetSnapshotList"}],"name":"f5299bbc_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"1GetTimeMachineID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2GetSnapshotList"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1GetTimeMachineID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Time Machine ID\nurl  = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/tms\/name\/@@{DB_NAME}@@_tm?load-drive=false\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"TM_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get Time Machine ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["TM_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2GetSnapshotList","attrs":{"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Time Machine Capability\nurl  = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/tms\/@@{TM_ID}@@\/capability?summary=false&time-zone=UTC\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n\nif resp.ok:\n  \n  # Cycle through the snapshot modes\n  for modes in json.loads(resp.content)['capability']:\n    print \"{0} MODE\".format(modes['mode'])\n    \n    # Cycle through the snapshots if they exist\n    if modes['snapshots']:\n      for snapshot in modes['snapshots']:\n        print \"  ------------------------\"\n        print \"  Snapshot ID (copy this): {0}\".format(snapshot['id'])\n        print \"  Snapshot Time Stamp:     {0}\".format(snapshot['snapshotTimeStamp'])\n        \n    # Print message if the don't exist\n    else:\n      print \"  ------------------------\"\n      print \"  No {0} snapshots exist.\".format(modes['mode'].lower())\n\nelse:\n  print \"Get Time Machine Capability request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","type":"","command_line_args":"","exit_status":[],"script_type":"static"},"timeout_secs":"0","type":"EXEC","variable_list":[]}],"description":"","name":"676e7778_runbook","main_task_local_reference":{"kind":"app_task","name":"f5299bbc_dag"},"variable_list":[]},"name":"GetSnapshotList"},{"description":"","type":"user","critical":false,"runbook":{"task_definition_list":[{"retries":"0","description":"","child_tasks_local_reference_list":[{"kind":"app_task","name":"1GetTimeMachineID"},{"kind":"app_task","name":"2TakeSnapshot"},{"kind":"app_task","name":"3MonitorOperation"}],"name":"fe7cea37_dag","attrs":{"edges":[{"from_task_reference":{"kind":"app_task","name":"1GetTimeMachineID"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"2TakeSnapshot"}},{"from_task_reference":{"kind":"app_task","name":"2TakeSnapshot"},"edge_type":"user_defined","type":"","to_task_reference":{"kind":"app_task","name":"3MonitorOperation"}}],"type":""},"timeout_secs":"0","type":"DAG","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"1GetTimeMachineID","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Get Time Machine ID\nurl  = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/tms\/name\/@@{DB_NAME}@@_tm?load-drive=false\"\nresp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\nif resp.ok:\n  print \"TM_ID={0}\".format(json.loads(resp.content)['id'])\nelse:\n  print \"Get Time Machine ID request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["TM_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"2TakeSnapshot","attrs":{"exit_status":[],"script":"# Set creds and headers\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\n\n# Set the URL and payload\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/tms\/@@{TM_ID}@@\/snapshots\"\npayload = {\n  \"actionHeader\": [\n    {\n      \"name\": \"snapshotName\",\n      \"value\": \"@@{DB_NAME}@@_snap_@@{calm_time(\"%Y%m%d%H%M\")}@@\"\n    }\n  ]\n}\n\n# Make the call and set the response operation ID to the variable\nresp = urlreq(url, verb='POST', auth='BASIC', user=era_user, passwd=era_pass, params=json.dumps(payload), headers=headers)\nif resp.ok:\n  print \"SNAP_OPERATION_ID={0}\".format(json.loads(resp.content)['operationId'])\nelse:\n  print \"Post Database create request failed\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)","eval_variables":["SNAP_OPERATION_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]},{"target_any_local_reference":{"kind":"app_service","name":"Postgres"},"retries":"0","description":"","child_tasks_local_reference_list":[],"name":"3MonitorOperation","attrs":{"exit_status":[],"script":"# Set creds, headers, and URL\nera_user = '@@{era_creds.username}@@'\nera_pass = '@@{era_creds.secret}@@'\nheaders = {'Content-Type': 'application\/json', 'Accept': 'application\/json'}\nurl     = \"https:\/\/@@{era_ip}@@:8443\/era\/v0.8\/operations\/@@{SNAP_OPERATION_ID}@@\"\n\n# Monitor the operation\nfor x in range(9):\n  \n  print \"Sleeping for 20 seconds.\"\n  sleep(20)\n  resp = urlreq(url, verb='GET', auth='BASIC', user=era_user, passwd=era_pass, headers=headers)\n  print \"Percentage Complete: {0}\".format(json.loads(resp.content)['percentageComplete'])\n  \n  # If complete, break out of loop\n  if json.loads(resp.content)['percentageComplete'] == \"100\":\n    break\n\n# If the operation did not complete within 3 minutes, assume it's not successful and error out\nif json.loads(resp.content)['percentageComplete'] != \"100\":\n  print \"Get Operation ID timed out\", json.dumps(json.loads(resp.content), indent=4)\n  exit(1)\n\n# Get the newly provision DB Entity Name and set it to a variable\nprint \"SNAP_ENTITY_ID={0}\".format(json.loads(resp.content)['entityId'])","eval_variables":["SNAP_ENTITY_ID"],"eval_scope":"local","type":"","script_type":"static"},"timeout_secs":"0","type":"SET_VARIABLE","variable_list":[]}],"description":"","name":"e79a5451_runbook","main_task_local_reference":{"kind":"app_task","name":"fe7cea37_dag"},"variable_list":[]},"name":"TakeSnapshot"}],"name":"Default","variable_list":[{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"compute_profile","value":"CUSTOM_SMALL","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"database_parameter","value":"DEFAULT_POSTGRES_PARAMS","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"db_name_prefix","value":"fiestadb1","label":"","editables":{"value":false},"is_hidden":true},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"SECRET","name":"db_password","value":"","label":"","attrs":{"is_secret_modified":false,"secret_reference":{},"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":true,"description":"","data_type":"BASE","type":"LOCAL","name":"era_ip","value":"","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"network_profile","value":"DEFAULT_POSTGRES_NETWORK","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"sla_name","value":"DEFAULT_OOB_GOLD_SLA","label":"","attrs":{"type":""},"editables":{"value":true},"is_hidden":false},{"val_type":"STRING","is_mandatory":false,"description":"","data_type":"BASE","type":"LOCAL","name":"software_profile","value":"POSTGRES_10.4_OOB","label":"","editables":{"value":true},"is_hidden":false}]}],"published_service_definition_list":[],"default_credential_local_reference":{"kind":"app_credential","name":"era_creds"},"type":"USER"},"name":"EraPostgresProvision"},"api_version":"3.0","metadata":{"last_update_time":"1588369536647578","kind":"blueprint","spec_version":2,"creation_time":"1588360066657156","name":"EraPostgresProvision"}}